ui.tabs.logs.title=ログ
ui.button.browse=参照…
ui.button.obfuscate=難読化を実行
ui.messages.error=エラー！

ui.tabs.io.title=入力 / 出力
ui.tabs.io.input=入力：
ui.tabs.io.input.tooltip=<.class または .jar ファイルをここへ＞
ui.tabs.transformers.title=トランスフォーマー
ui.tabs.transformers.untitled=タイトルなし
ui.tabs.io.output=出力：
ui.tabs.io.threads=スレッド数
ui.tabs.io.libraries=ライブラリ：
ui.tabs.io.libraries.add=追加
ui.tabs.io.libraries.remove=削除
ui.tabs.configuration.title=設定ファイル
ui.tabs.configuration.button.build=ビルド
ui.tabs.configuration.pretty_print=整形して表示
ui.tabs.configuration.button.load=読み込み
ui.tabs.configuration.button.save=書き出し
ui.tabs.script.title=スクリプト
ui.tabs.templates.title=テンプレート
ui.tabs.templates.button.apply=テンプレートを適用
ui.tabs.logs.button.clear=全部消去
ui.tabs.logs.auto_scroll=自動スクロール
ui.tabs.logs.verbose=詳細を表示
ui.messages.error.no_input=入力ファイルが指定されていないか, 存在していません！
ui.messages.error.no_template_selected=テンプレートを適用する前に選択する必要があります。
ui.messages.error.invalid_jvm_file=選択したファイルは有効な Zip ファイル, Java クラスファイル, またはディレクトリではありません。
logs.obfuscation.classpath.loading=クラスパスを読み込んでいます …
logs.task_finished=… %%time%% で完了しました。
logs.time_unit.second=秒
logs.time_unit.minute=分
logs.time_unit.hour=時間
logs.obfuscation.finishing=最終処理をしています …
logs.obfuscation.finished=>>> 処理が完了しました。もしバグや無効な出力を発見したら, https://github.com/PeyaPeyaPeyang/JavaObfuscator/issues で報告してください！
logs.obfuscation.error.an_error_occurred=処理の途中でエラーが発生しました。
logs.obfuscation.error.fail_read=クラス %%className%% の読み込みに失敗しました。
logs.obfuscation.reading_input=%%jarName%% を読み込んでいます…
logs.obfuscation.transformer.packager.generating_decrypter=[パッケージ化] 復号用クラスを生成しています …
logs.obfuscation.transformer.begin=%%classes%% クラスを %%threads%% スレッドで処理しています …
logs.obfuscation.resources.writing=リソースを書き込み中…
logs.obfuscation.resources.main_class.replaced=メイン・クラスを %%newMainClass%% に置換しました。
logs.obfuscation.resources.main_class.manifest_proceed=マニフェスト・ファイルの処理を完了しました。
logs.obfuscation.copying_entry=%%entryName%% をコピーしています…
logs.obfuscation.resources.main_class.manifest_added=マニフェスト・ファイルを追加します。
logs.obfuscation.resources.main_class.detected_change=!!! メイン・クラスが %%newMainClass%% に変更されました !!!
logs.obfuscation.transforming.processing=(%%proceedClasses%%/%%totalClasses%%) %%entryName%% を処理しています…
logs.obfuscation.transforming.skipped.annotation=(%%proceedClasses%%/%%totalClasses%%) %%entryName%% の処理はアノテーションによりスキップされました。
logs.obfuscation.transforming.skipped=(%%proceedClasses%%/%%totalClasses%%) %%entryName%% の処理は設定によりスキップされました。
logs.obfuscation.transforming.error=(%%proceedClasses%%/%%totalClasses%%) %%entryName%% の処理中にエラーが発生しました。
logs.obfuscation.transforming.writing=(%%proceedClasses%%/%%totalClasses%%) %%entryName%% を計算方式 %%computingMode%% で書き込んでいます…
logs.obfuscation.transforming.writing_artifact=%%outputPath%% にクラスを書き込んでいます…
logs.obfuscation.hierarchy.missing_super_class.fatal=クラス %%missingSuperClass%%は %%referencingClass%% により参照されていますが, クラス・パスに存在しません。
logs.obfuscation.hierarchy.missing_super_class=クラス %%missingSuperClass%%は %%referencingClass%% により参照されていますが, クラス・パスに存在しません。このクラスのサブクラスは処理されません。
logs.obfuscation.hierarchy.missing_interface.fatal=インタフェース %%missingSuperInterface%%は %%referencingClass%% により参照されていますが, クラス・パスに存在しません。
logs.obfuscation.hierarchy.missing_interface=インタフェース %%missingSuperInterface%%は %%referencingClass%% により参照されていますが, クラス・パスに存在しません。このクラスの実装クラスは処理されません。
logs.obfuscation.classpath.not_exist=ライブラリ %%fileName%% が存在しません！
logs.obfuscation.classpath.loading_each=%%filePath%% を読み込んでいます… [%%percent%%%]
logs.obfuscation.classpath.read.reading_file=%%fileName%%(%%filePath%% 内）をメモリに展開しています…
logs.obfuscation.classpath.read.fail=%%fileName%%(%%filePath%% 内）をメモリに展開できませんでした。
logs.obfuscation.classpath.read.success=全部で %%classes%% 個のクラスファイルをメモリに読み込みました。
logs.obfuscation.classpath.parsing_class=クラスファイルを読み取っています…
ui.multi_line.editing=編集中: %%containerName%%
ui.multi_line.click=>>> クリックして編集 <<<
ui.transformers.enabled=有効化
ui.transformers.enabled.description=この機能を有効化するかどうかです。
ui.transformers.flow_obfuscator=フローの難読化
ui.transformers.flow_obfuscator.mangle_comparisons=比較の細分化
ui.transformers.flow_obfuscator.mangle_comparisons.description=long や float, double の比較をそれぞれメソッド呼び出しに置換します。
ui.transformers.flow_obfuscator.replace_goto=GOTOの置換
ui.transformers.flow_obfuscator.replace_goto.description=無条件なジャンプを冗長な条件分岐に変換します。
ui.transformers.flow_obfuscator.replace_if=if 文の置換
ui.transformers.flow_obfuscator.replace_if.description=条件分岐をメソッド呼び出しに変換します。
ui.transformers.flow_obfuscator.bad_pop=悪い POP 命令
ui.transformers.flow_obfuscator.bad_pop.description=冗長な POP 命令を挿入してデコンパイラをクラッシュさせます。
ui.transformers.flow_obfuscator.bad_concat=悪い文字列結合
ui.transformers.flow_obfuscator.bad_concat.description=文字列の結合を破壊します。
ui.transformers.flow_obfuscator.mangle_switches=switch 文の細分化
ui.transformers.flow_obfuscator.mangle_switches.description=switch 文の中身をそれぞれ if-else で置換します。
ui.transformers.flow_obfuscator.mangle_return=return 命令の一元化
ui.transformers.flow_obfuscator.mangle_return.description=メソッド内の return 命令を１つにまとめます。
ui.transformers.flow_obfuscator.mangle_local_variables=ローカル変数の一元化
ui.transformers.flow_obfuscator.mangle_local_variables.description=ローカル変数を型別の配列に変換して一元管理します。
ui.transformers.flow_obfuscator.description=フローを混乱させてデコンパイルを防ぎます。
ui.transformers.packager=Packager
ui.transformers.packager.description=クラスをすべて暗号化して, カスタムされたクラスローダで動的に読み込みます。
ui.transformers.packager.main_class=メイン・クラス
ui.transformers.packager.main_class.description=使用するにはメイン・クラスを指定します。
ui.transformers.packager.auto_find_main_class=メイン・クラスの自動設定
ui.transformers.packager.auto_find_main_class.description=マニフェスト・ファイルからメイン・クラスを自動設定します。
ui.transformers.flow_obfuscator.static_init=静的初期化
ui.transformers.flow_obfuscator.static_init.description=静的フィールドを静的イニシャライザにまとめます。
ui.transformers.line_number_remover=行数情報の削除
ui.transformers.line_number_remover.description=行番号やローカル変数名などの情報を削除します。
ui.transformers.line_number_remover.rename_local_vars=ローカル変数を再命名
ui.transformers.line_number_remover.rename_local_vars.description=ローカル変数の名前をランダム化します。
ui.transformers.line_number_remover.remove_line_nums=行番号情報の削除
ui.transformers.line_number_remover.remove_line_nums.description=クラスファイルの行番号情報を削除します。
ui.transformers.line_number_remover.add_local_vars=壊れたローカル変数を追加します。
ui.transformers.line_number_remover.add_local_vars.description=間違った型のローカル変数を追加して, デコンパイラをクラッシュさせます。
ui.transformers.invoke_dynamic=Invoke Dynamic
ui.transformers.invoke_dynamic.description=Invoke Dynamic 命令を用いてメソッド呼び出しを隠します。
ui.transformers.hide_members=メンバの隠蔽
ui.transformers.hide_members.description=synthetic 修飾子を付与してメンバを隠します。
ui.transformers.decompiler_crasher=デコンパイラの破壊
ui.transformers.decompiler_crasher.description=無効なクラス構造を生成してデコンパイラをクラッシュさせます。
ui.transformers.decompiler_crasher.invalid_signatures=間違ったシグニチャ
ui.transformers.decompiler_crasher.invalid_signatures.description=壊れたシグニチャを付加します。
ui.transformers.decompiler_crasher.empty_annotation_spam=空のアノテーションを連続
ui.transformers.decompiler_crasher.empty_annotation_spam.description=改行文字を反復したアノテーションを複数個生成します。
ui.transformers.shuffler.description=クラスのあらゆる要素をシャッフルします。
ui.transformers.shuffler=シャッフル化
ui.transformers.shuffler.shuffle_class_structure=クラス構造をシャッフル
ui.transformers.shuffler.shuffle_class_structure.description=（例：メソッドやフィールド, アノテーションなどの順序）
ui.transformers.shuffler.shuffle_method_structure=メソッド構造定義情報をシャッフル
ui.transformers.shuffler.shuffle_method_structure.description=(e.g. 例外やパラメータ, アノテーションなどの順序）
ui.transformers.shuffler.shuffle_field_structure=フィールドの構造情報をシャッフル
ui.transformers.shuffler.shuffle_field_structure.description=(例：アノテーションの順序）
ui.transformers.shuffler.shuffle_annotations=アノテーションの順序をシャッフル
ui.transformers.shuffler.shuffle_annotations.description=クラスやメソッド, フィールドにおけるアノテーションの順序をシャッフルします。
ui.transformers.shuffler.shuffle_debug_class_names=ソースファイルの名前をシャッフル
ui.transformers.shuffler.shuffle_debug_class_names.description=クラスのソースファイルを他のクラスとシャッフルします。
ui.transformers.string_encryption=文字列の暗号化
ui.transformers.string_encryption.description=コード内の文字列を暗号化します。
ui.transformers.string_encryption.algo_aes=AES アルゴリズムを使う
ui.transformers.string_encryption.algo_xor=XOR 処理アルゴリズムを使う
ui.transformers.string_encryption.algo_blowfish=Blowfish アルゴリズムを使う
ui.transformers.string_encryption.algo_des=DES アルゴリズムを使う
ui.transformers.hide_strings=文字列の隠蔽
ui.transformers.hide_strings.description=コード内の文字列をメタデータ領域内に隠蔽します。
ui.transformers.hide_strings.optimise_ledger=文字列一覧データを最適化
ui.transformers.hide_strings.optimise_ledger.description=文字列定義内に同じ文字列がすでにある場合, それを使いまわします。
ui.transformers.hide_strings.start_marker=開始マーカー
ui.transformers.hide_strings.start_marker.description=文字列定義の開始位置を示すマーカーです。
ui.transformers.hide_strings.delimiter=区切り文字
ui.transformers.hide_strings.delimiter.description=文字列定義内の各文字列の区切り文字です。
ui.transformers.hide_strings.end_marker=終了マーカー
ui.transformers.hide_strings.end_marker.description=文字列定義の終了位置を示すマーカーです。
ui.transformers.optimiser=最適化
ui.transformers.optimiser.description=バイトコードを最適化します。
ui.transformers.optimiser.replace_equals=String の同値比較を置換する
ui.transformers.optimiser.replace_equals.description=String#equals() を最適な命令に置換します。
ui.transformers.optimiser.replace_equals_ic=String の同値比較を置換する（大小混合）
ui.transformers.optimiser.replace_equals_ic.description=String#equalsIgnoreCase() を最適な命令に置換します。
ui.transformers.optimiser.replace_static_calls=静的なメソッドの呼び出しを置換
ui.transformers.optimiser.replace_static_calls.description=String#hashCode() や #toUpper/LowerCase() などの静的なメソッド呼び出しを最適化します。
ui.transformers.number=数値の難読化
ui.transformers.number.description=バイトコード内の定数の数値を難読化します。
ui.transformers.number.extract_to_array=配列に抽出
ui.transformers.number.extract_to_array.description=すべての数値を一つの配列に抽出します。
ui.transformers.number.obfuscate_zero=ゼロに特別な難読化を施す
ui.transformers.number.obfuscate_zero.description=ゼロに特別な難読化を施します。
ui.transformers.number.shift=ビット・シフトを使う
ui.transformers.number.shift.description=ビット・シフト（<<) を難読化に使います。
ui.transformers.number.and=論理積を使う
ui.transformers.number.and.description=論理積（&）を難読化に使います。
ui.transformers.number.xor=排他的論理和を使う
ui.transformers.number.xor.description=排他的論理和（^）を難読化に使います。
ui.transformers.number.string_length=文字列の長さを使う
ui.transformers.number.string_length.description=ランダムな固定された文字列の長さを難読化に使います。
ui.transformers.number.simple_math=簡単な計算
ui.transformers.number.simple_math.description=簡単な計算（e.g. 加算や減算など）を難読化に使います。
ui.transformers.number.multiple_instructions=複数回適用する
ui.transformers.number.multiple_instructions.description=これらの難読化を複数回適用します。
ui.transformers.name=名前の難読化
ui.transformers.name.description=あらゆる要素の命名をランダムな文字列に置換します。
ui.transformers.name.excluded_classes=除外するクラス
ui.transformers.name.excluded_classes.description=処理から除外するクラスを指定します（ワイルドカード可）。
ui.transformers.name.excluded_methods=除外するメソッド
ui.transformers.name.excluded_methods.description=処理から除外するメソッドを指定します（ワイルドカード可）。
ui.transformers.name.excluded_fields=除外するフィールド
ui.transformers.name.excluded_fields.description=処理から除外するフィールドを指定します（ワイルドカード可）。
ui.transformers.name.allow_missing_libraries=ライブラリの不足を許可
ui.transformers.name.allow_missing_libraries.description=ライブラリが不足していてもそれをスキップして処理を続行します。
ui.transformers.name.enable_class=クラス名を処理する
ui.transformers.name.enable_class.description=クラスの名前に対して難読化を行います。
ui.transformers.name.enable_method=メソッド名を処理する
ui.transformers.name.enable_method.description=メソッドの名前に対して難読化を行います。
ui.transformers.name.enable_field=フィールド名を処理する
ui.transformers.name.enable_field.description=フィールドの名前に対して難読化を行います。
ui.transformers.name.randomise_package=パッケージ構造をランダム化
ui.transformers.name.randomise_package.description=パッケージの構造や名前をランダム化します。
ui.transformers.name.new_packages=新しいパッケージ名
ui.transformers.name.new_packages.description=適用する新しいパッケージ名（改行区切り）です。
ui.transformers.name.randomise_source_file=ソース・ファイル名をランダム化
ui.transformers.name.randomise_source_file.description=クラス・ファイルに付与されるデバッグ用のソース・コード名をランダム化します。
ui.transformers.name.randomise_debug_source_file=デバッグ用のソース・ファイル名をランダム化
ui.transformers.name.randomise_debug_source_file.description=クラス・ファイルに付与されるデバッグ用のソース・コード名をランダム化します。
ui.transformers.name.new_source_names=新しいソース/デバッグ・ファイルの名前
ui.transformers.name.new_source_names.description=新しいソース/デバッグ・ファイルの名前を付与します（改行区切り）
ui.transformers.name.save_mappings=難読化名の対応を保存
ui.transformers.name.save_mappings.description=難読化名のマッピング・ファイルを保存するかどうか
ui.transformers.name.mappings_file=保存するマッピング・ファイル
ui.transformers.name.mappings_file.description=保存するマッピング・ファイルの場所を指定します。
ui.transformers.inner_class=内包クラスの削除
ui.transformers.inner_class.description=内部クラスを削除してトップ・レベルに移します。
ui.transformers.inner_class.relocate_classes=クラスを再配置
ui.transformers.inner_class.relocate_classes.description=内部クラスをトップ・レベルに再配置します。
ui.transformers.inner_class.erase_metadata=メタデータの消去
ui.transformers.inner_class.erase_metadata.description=内部クラスに関するメタデータを消去します。
ui.transformers.general=一般設定
ui.transformers.general.excluded_classes=除外するクラス
ui.transformers.general.excluded_classes.description=難読化処理から除外するクラスを指定します（改行区切り）。
ui.transformers.general.generator_char=生成する文字の種類
ui.transformers.general.generator_char.description=ランダムな命名で使用する文字を指定します。
ui.transformers.general.use_custom_dictionary=独自の命名候補を使う
ui.transformers.general.use_custom_dictionary.description=独自の辞書を命名時に使用するかどうかです。
ui.transformers.general.class_names_dictionary=クラス名の命名候補
ui.transformers.general.class_names_dictionary.description=クラス名の命名処理で使用する名前の一覧です。
ui.transformers.general.other_names_dictionary=その他の命名候補
ui.transformers.general.other_names_dictionary.description=その他のの命名処理（例：メソッド名やフィールド名）で使用する名前の一覧です。
ui.transformers.general.use_store=Store を Deflate の代わりに使う
ui.transformers.general.use_store.description=SpringBoot などでは Store アルゴリズムを使う必要があります。


